
jar文件的复制和解压(JarInputStream,JarOutputStream和JarFile)
发表于2013/7/24 14:15:40  1594人阅读
分类： jar文件的复制 jar解压 java

package test;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import java.util.jar.JarInputStream;
import java.util.jar.JarOutputStream;
import java.util.jar.Manifest;
import java.util.zip.ZipEntry;

import org.apache.log4j.Logger;
import org.junit.Test;


public class Util_Jar_Test {

    Logger log = Logger.getLogger(this.getClass());
    
    //复制jar
    public static void copyJar(File src , File des) throws FileNotFoundException, IOException{
        JarInputStream jarIn = new JarInputStream(new BufferedInputStream(new FileInputStream(src)));
        Manifest manifest = jarIn.getManifest();
        JarOutputStream jarOut = null;
        if(manifest == null){
            jarOut = new JarOutputStream(new BufferedOutputStream(new FileOutputStream(des)));
        }else{
            jarOut = new JarOutputStream(new BufferedOutputStream(new FileOutputStream(des)),manifest);
        }
         
        byte[] bytes = new byte[1024];
        while(true){
            //重点
            ZipEntry entry = jarIn.getNextJarEntry();
            if(entry == null)break;
            jarOut.putNextEntry(entry);

            int len = jarIn.read(bytes, 0, bytes.length);
            while(len != -1){
                jarOut.write(bytes, 0, len);
                len = jarIn.read(bytes, 0, bytes.length);
            }
//            log.info("Copyed: " + entry.getName());
//            jarIn.closeEntry();
//            jarOut.closeEntry();
            String a = new String();
            a.length();
        }
        jarIn.close();
        jarOut.finish();
        jarOut.close();
    }
    
    //解压jar
    public void unJar(File src , File desDir) throws FileNotFoundException, IOException{
        JarInputStream jarIn = new JarInputStream(new BufferedInputStream(new FileInputStream(src)));
        if(!desDir.exists())desDir.mkdirs();
        byte[] bytes = new byte[1024];
        
        while(true){
            ZipEntry entry = jarIn.getNextJarEntry();
            if(entry == null)break;
            
            File desTemp = new File(desDir.getAbsoluteFile() + File.separator + entry.getName());
            
            if(entry.isDirectory()){    //jar条目是空目录
                if(!desTemp.exists())desTemp.mkdirs();
                log.info("MakeDir: " + entry.getName());
            }else{    //jar条目是文件
                BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(desTemp));
                int len = jarIn.read(bytes, 0, bytes.length);
                while(len != -1){
                    out.write(bytes, 0, len);
                    len = jarIn.read(bytes, 0, bytes.length);
                }
                
                out.flush();
                out.close();
                
                log.info("Copyed: " + entry.getName());
            }
            jarIn.closeEntry();
        }
        
        //解压Manifest文件
        Manifest manifest = jarIn.getManifest();
        if(manifest != null){
        File manifestFile = new File(desDir.getAbsoluteFile()+File.separator+JarFile.MANIFEST_NAME);
        if(!manifestFile.getParentFile().exists())manifestFile.getParentFile().mkdirs();
        BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(manifestFile));
        manifest.write(out);
        out.close();
        }
        
        //关闭JarInputStream
        jarIn.close();
    }
    
    
    //复制jar by JarFile
    public void copyJarByJarFile(File src , File des) throws IOException{
        //重点
        JarFile jarFile = new JarFile(src);
        Enumeration<JarEntry> jarEntrys = jarFile.entries();
        JarOutputStream jarOut = new JarOutputStream(new BufferedOutputStream(new FileOutputStream(des)));
        byte[] bytes = new byte[1024];
        
        while(jarEntrys.hasMoreElements()){
            JarEntry entryTemp = jarEntrys.nextElement();
            jarOut.putNextEntry(entryTemp);
            BufferedInputStream in = new BufferedInputStream(jarFile.getInputStream(entryTemp));
            int len = in.read(bytes, 0, bytes.length);
            while(len != -1){
                jarOut.write(bytes, 0, len);
                len = in.read(bytes, 0, bytes.length);
            }
            in.close();
            jarOut.closeEntry();
            log.info("Copyed: " + entryTemp.getName());
        }
        
        jarOut.finish();
        jarOut.close();
        jarFile.close();
    }
    
    //解压jar文件by JarFile
    public void unJarByJarFile(File src , File desDir) throws FileNotFoundException, IOException{
        JarFile jarFile = new JarFile(src);
        Enumeration<JarEntry> jarEntrys = jarFile.entries();
        if(!desDir.exists())desDir.mkdirs(); //建立用户指定存放的目录
        byte[] bytes = new byte[1024];    
        
        while(jarEntrys.hasMoreElements()){
            ZipEntry entryTemp = jarEntrys.nextElement();
            File desTemp = new File(desDir.getAbsoluteFile() + File.separator + entryTemp.getName());
            
            if(entryTemp.isDirectory()){    //jar条目是空目录
                if(!desTemp.exists())desTemp.mkdirs();
                log.info("makeDir" + entryTemp.getName());
            }else{    //jar条目是文件
                //因为manifest的Entry是"META-INF/MANIFEST.MF",写出会报"FileNotFoundException"
                File desTempParent = desTemp.getParentFile();
                if(!desTempParent.exists())desTempParent.mkdirs();
                
                BufferedInputStream in = new BufferedInputStream(jarFile.getInputStream(entryTemp));
                BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream(desTemp));
                
                int len = in.read(bytes, 0, bytes.length);
                while(len != -1){
                    out.write(bytes, 0, len);
                    len = in.read(bytes, 0, bytes.length);
                }
                
                in.close();
                out.flush();
                out.close();
                
                log.info("Copyed: " + entryTemp.getName());
            }
        }
        
        jarFile.close();
    }
    
    
    
    /*实验结论:
     * 1.JarInputStream的getNextJarEntry()和jarOutputStream的putNextJarEntry()中没有包括"META-INF/MANIFEST.MF"这一项,因此复制和解压都	要注意
     * 2.JarFile的entries()方法包含了全部Entry,也包括"META-INF/MANIFEST.MF",没有"META-INF/"这一项,因此在解压的时候要先检测父文件存不存在
     * 4.复制jar文件有3中方法, A是直接用BufferedInputStream和BufferedOutputStream复制,
     *                      B是用JarInputStream的getNextJarEntry()和jarOutputStream的putNextJarEntry()
     *                      C是用JarFile的entries()方法,遍寻JarEntry的InputStream,以此写出
     * 5.解压jar的话推荐使用JarFile,当前实例方法只支持解压jar文件
     * 6.在复制的时候,src文件只可以是jar文件,但des文件可以是带zip或rar后缀的文件
     */
    
    public static void testCopyJar(){
        File src = new File("C:\\Documents and Settings\\Administrator\\桌面\\ESB新版本\\新建文件夹\\win32.win32.x86\\eclipse\\plugins\\xmlEditor.jar");
        File des = new File("C:\\Documents and Settings\\Administrator\\桌面\\ESB新版本\\新建文件夹\\win32.win32.x86\\eclipse\\workspace\\j\\lib/1.jar");
        //实验表明只运行复制和解压jar文件
//        File src = new File("C:/rtf.zip");
//        File des = new File("C:/testCopy.zip");
        try {
            copyJar(src,des);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    public static void main(String[] args) {
    	testCopyJar();
    }
    
    public void testUnJar(){
        File src = new File("C:/a.jar");
//        File src = new File("C:/b.rar");    //不支持rar解压
        String desFile = "aa";
        File desDir = new File(src.getParent()+File.separator+desFile);
        try {
            unJar(src, desDir);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    
    
    public void testCopyJarByJarFile(){
        File src = new File("C:/a.jar");
        File des = new File("C:/testCopy.zip");
        try {
            copyJarByJarFile(src,des);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    
    public void testUnJarByJarFile(){
        File src = new File("C:/a.jar");
//        File src = new File("C:/b.rar");    //不支持rar解压
        String desFile = "aa";
        File desDir = new File(src.getParent()+File.separator+desFile);
        try {
            unJarByJarFile(src, desDir);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
 }

阅读全文
1 0

相关文章推荐
JarFile读取jar内文件实例
  rchm8519 2014-09-25 20:00 4293
压缩和解压文件的工具类（ant-1.8.4.jar）
  z69183787 2014-08-14 11:08 1120

Jar文件JarFile的读写操作
  w359593616 2016-01-21 09:14 961
打包成jar文件后运行出现Invalid or corrupt jarfile 解决
  master_yao 2016-04-07 22:19 17514
jarFile读取jar文件内容
  songmaolin_csdn 2017-08-03 13:46 114

JarFile解析jar文件。获取jar中后缀为class文件路径
  qq_40951086 2017-11-20 11:30 26
【成功解决】ubuntu 12.04 解压 zip 7z rar jar 文件，文件名中文乱码的问题
  twlkyao 2013-08-16 12:10 1898
怎样制作自解压jar文件
  tomora 2013-09-15 10:27 682
查看更多
暂无评论，我去发表~
 未登录
•首页
•移动开发
•架构
•云计算/大数据
•互联网
•运维
•数据库
•前端
•编程语言
•研发管理
•综合
©1999-2012, csdn.net, All Rights Reserved


